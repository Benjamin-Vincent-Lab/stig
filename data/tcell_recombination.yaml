# Welcome to STIG's recombination probability configuration!
#
# This YAML-formatted file describes two important processes in TCR
# recombination: segment selection ("what" gets included in the TCR) and
# exonuclease/polymerase recombination ("how" segments are incorporated in the
# TCR).
#
# Please note that any/all credit for default recombination values in STIG
# goes to J Freeman and R Warren, on whose beta chain profiling work
# work these values are loosely adapted.
# See: JDFreeman, RLWarren, et al "Profiling the T-cell receptor beta-chain
# repertoire by massively parallel sequencing", Genome Research, 2009.
# https://doi.org/10.1101/gr.092924.109
#
#
#
# # # # # # # # # # # # # # # # # # 
#        Segment selection        #
# # # # # # # # # # # # # # # # # # 
#
# Segment selection configures how likely a given TCR V, D or J segment is to
# be included into a particular TCR.  When generating each chain of a TCR,
# STIG will choose a V region, then -- for beta/delta chains -- a D region,
# a J region, and finally a C region.  Probability values are *absolute*, so
# 0.25 means there is a 1-in-4 chance.  Because in nature the odds of a
# particular segment being selected is influenced by the segments selected
# before it, STIG uses *tuples* (an ordered list/array) to define what
# context a particular probability applies to.
#
# Defined segments that STIG considers 'valid' choices (i.e. on the same
# chromosome & strand and "downstream" of our earlier V, D or J choices) that
# DO NOT have probabilities defined, will have the remaining unassigned
# probability split equally between them.  A corollary to this is that, absent
# user-provided probabilities, STIG will select "valid" segments with equal
# probability.  See the examples below for more on this.
#
#
# Example 1:
# ----------
#
##recombination:
##- !!python/tuple [TRBV20-1, 0.5]
#
# When generating beta chains, STIG will choose TRBV20-1 50% of the time.
# Because there are no probabilities provided for other beta chain V-regions,
# STIG will distribute the remaining 50% probability between any other defined
# beta chain V-regions.
#
#
# Example 2:
# ----------
#
##segments:
##- !!python/tuple [TRBV20-1, 0.75]
##- !!python/tuple [TRBV5-1, 0.25]
#
# When generating beta chains, STIG will choose between two V-regions,
# TRBV20-1 and TRBV5-1, as 75 and 25%, respectively.  This leaves 0% chance
# that any other beta chain will be selected, even if they are defined in your
# TCR definition file.
#
#
# Example 3:
# ----------
#
##segments:
##- !!python/tuple [TRBV20-1, 0.75]
##- !!python/tuple [TRBV5-1, 0.50]
#
# The provided probabilities total > 100%. Because STIG interprets
# probabilites in the order that they are given, this example is functionally
# equivalent to example #2 (i.e. 75% and 25%). However this behavior
# may vary based on your Python and PyYAML package implementations and should
# be avoided.  STIG will print a warning message to the standard error if it
# encounters probabilities that total to greater than 100%.
#
#
# Example 3:
# ----------
#
##segments:
##- !!python/tuple [TRBV20-1, TRBJ2-3, 0.20]
##- !!python/tuple [TRBV20-1, TRBJ4-1, 0.10]
##- !!python/tuple [TRBV5-1, TRBJ2-3, 0.50]
#
# In cases where TRBV20-1 was selected first, TRBJ2-3 will be selected as the
# J-region 20% of the time , TRBJ4-1 10% of the time, and any other valid
# TRBJ region the remaining 70%.  In cases where TRBV5-1 was selected as the
# V-region, TRBJ2-3 is chosen 80% of the time.


segments:
- !!python/tuple [TRBV20-1, 0.24]
- !!python/tuple [TRBV5-1, 0.125]
- !!python/tuple [TRBV29-1, 0.105]
- !!python/tuple [TRBV28, 0.051]
- !!python/tuple [TRBV10-3, 0.045]
- !!python/tuple [TRBV4-2, 0.04]
- !!python/tuple [TRBV20-1, TRBJ2-1, 0.17]
- !!python/tuple [TRBV20-1, TRBJ1-1, 0.12]
- !!python/tuple [TRBV20-1, TRBJ2-7, 0.11]
- !!python/tuple [TRBV20-1, TRBJ1-5, 0.1]
- !!python/tuple [TRBV20-1, TRBJ2-3, 0.09]
- !!python/tuple [TRBV20-1, TRBJ2-2, 0.08]



# # # # # # # # # # # # # # # # # 
#         Recombination         #
# # # # # # # # # # # # # # # # # 
#
# In nature, the exonuclease and polymerase activity during V(D)J
# recombination provides needed diversity to the resulting TCRs by adding or
# subtracting ("chewback") bases from segments.  STIG approximates this by
# a series of arrays that define the probability of some number of bases
# being added or subtracted from a location within the V(D)J segments.
# Arrays exist for adding bases to VJ junctions, VD junctions, and DJ
# junctions.  Chewback arrays exist for removing bases from 3' J, 5' D, 
# 3' D, and 5' V regions. These arrays are indexed to zero, such that the
# first position in each array refers to the probability that no bases will
# be added or removed.  The sum of probabilities in each array should sum
# to 1.
#
# The (non-optional) recombination arrays are:
# Jchewback  - For bases removed from the D-facing portion of J-region
# D5chewback - For bases removed from the V-facing portion of the D-region
# D3chewback - For bases removed from the J-facing portion of the D-region
# Vchewback  - For bases removed from the D-facing portion of the V-region
# VDaddition - For bases added to V-D region fusions (beta/delta chains)
# DJaddition - For bases added to D-J region fusions (beta/delta chains)
# VJaddition - For bases added to V-J region fusions (alpha/gamma chains)
#
# Note that any unassigned probability will be assigned to the highest array
# index.  A warning message will trigger from STIG if choices are made based
# on this unassigned probability. See example #2 below.
#
#
#
# Example 1:
# ----------
#
##recombination:
##  Vchewback: [0.50, 0.25, 0.125, 0.125]
#
# For base removal from the V-region, no bases will be removed 50% of time,
# and 25%, 12.5%, and 12.5% of the time 1, 2 or 3 bases will be removed,
# respectively.
#
#
# Example 2:
# ----------
#
##recombination:
##  DJaddition: [0.60, 0.30]
#
# For base addition during D-J fusion of beta and delta chains, 60% will
# have no bases added.  While the user has specified 30% probability to add
# one base, the total probabilities for DJaddition sum to 90%.  That 10%
# unaccounted for will be assigned to the highest array index (1, in
# this case), and thus there is a 40% chance of 1 base being added.  A
# warning message will print to the standard error if this unaccounted-for
# probability triggers STIG's recombination choice.
# 

recombination:
  D3chewback: [0.2401, 0.1621, 0.2431, 0.2072, 0.0631, 0.0355, 0.0202, 0.0133, 0.0154]
  D5chewback: [0.3231, 0.1683, 0.1299, 0.0746, 0.1077, 0.0555, 0.0504, 0.0444, 0.0462]
  DJaddition: [0.1246, 0.1035, 0.1457, 0.1466, 0.1257, 0.0975, 0.0793, 0.0389, 0.0369,
    0.0227, 0.0133, 0.0164, 0.0076, 0.0135, 0.0053, 0.006, 0.0045, 0.0045, 0.0029,
    0.002, 0.001, 0.0009, 0.0007]
  Jchewback: [0.1197, 0.0867, 0.1037, 0.095, 0.1253, 0.1143, 0.0897, 0.0738, 0.0548,
    0.0327, 0.0207, 0.0134, 0.0101, 0.0095, 0.0072, 0.0139, 0.0059, 0.0077, 0.0065,
    0.0032, 0.0027, 0.0019, 0.0013, 0.0008, 0.0005]
  VDaddition: [0.1625, 0.1179, 0.1466, 0.1403, 0.133, 0.0817, 0.0635, 0.048, 0.0357,
    0.0233, 0.0184, 0.0073, 0.0073, 0.0071, 0.0033, 0.0013, 0.0009, 0.0005, 0.0002,
    0.0004, 0.0002, 0, 0.0009]
  VJaddition: [0.1625, 0.1179, 0.1466, 0.1403, 0.133, 0.0817, 0.0635, 0.048, 0.0357,
    0.0233, 0.0184, 0.0073, 0.0073, 0.0071, 0.0033, 0.0013, 0.0009, 0.0005, 0.0002,
    0.0004, 0.0002, 0, 0.0009]
  Vchewback: [0.2384, 0.1629, 0.1008, 0.1159, 0.1359, 0.1044, 0.0743, 0.0391, 0.0152,
    0.0061, 0.0043, 0.0022, 0.0004, 0.0005]


### END STIG recombination configuration